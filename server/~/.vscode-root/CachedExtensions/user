{"input":{"ourVersion":"1.38.1","commit":"b37e54c98e1a74ba89e03073e5a3761284e3ffb0","locale":"en","devMode":false,"absoluteFolderPath":"/Users/saraagarwal/.vscode/extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1585859026829},"result":[{"name":"prettier-vscode","displayName":"Prettier - Code formatter","description":"Code formatter using prettier","version":"3.20.0","publisher":"esbenp","author":"Prettier <@prettiercode>","galleryBanner":{"color":"#ffe04b","theme":"light"},"homepage":"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode","repository":{"type":"git","url":"https://github.com/prettier/prettier-vscode.git"},"license":"MIT","bugs":{"url":"https://github.com/prettier/prettier-vscode/issues"},"engines":{"vscode":"^1.34.0"},"keywords":["multi-root ready","prettier","formatter","javascript","js","jsx","flow","typescript","ts","json","css","less","scss","styled-components","styled-jsx","markdown","md","commonmark","mdx","php","pug","ruby","swift","html","vue","angular","graphql","yaml","yml"],"categories":["Formatters"],"activationEvents":["*"],"icon":"icon.png","main":"./dist/extension","scripts":{"clean":"node ./scripts/clean.js","lint":"tslint --project .","pretest":"yarn test-compile && cd test-fixtures/eslint && yarn install && cd ../tslint && yarn install  && cd ../plugins && yarn install && cd ../outdated && yarn install","prettier":"prettier --write '**/*.{ts,json,md,yml,js}'","test-compile":"yarn clean && tsc -p ./ && yarn webpack","test":"node ./out/test/runTests.js","version":"node ./scripts/version.js && git add CHANGELOG.md","vscode:package":"vsce package","vscode:publish":"vsce publish","vscode:prepublish":"webpack --mode production","watch":"tsc --watch -p ./","webpack-dev":"webpack --mode development --watch","webpack":"webpack --mode development"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"**/*.{ts,json,md,yml,js}":["prettier --write"],"src/**/*.ts":["tslint --project ."],"*":["git add"]},"devDependencies":{"@types/glob":"^7.1.1","@types/mocha":"^5.2.1","@types/node":"^12","@types/prettier":"^1.19.0","@types/resolve":"1.14.0","@types/semver":"6.2.0","@types/sinon":"^7.5.1","@types/vscode":"1.34.0","glob":"^7.1.6","husky":"^4.2.1","lint-staged":"^10.0.3","mocha":"^7.0.1","mocha-junit-reporter":"^1.23.3","sinon":"^8.1.1","ts-loader":"^6.2.1","tslint":"^5.20.1","tslint-config-prettier":"^1.18.0","typescript":"^3.7.5","vsce":"^1.71.0","vscode-nls-dev":"^3.3.1","vscode-test":"^1.3.0","webpack":"^4.41.5","webpack-cli":"^3.3.10"},"dependencies":{"ignore":"^5.1.4","mem":"^6.0.1","prettier":"^1.19.1","read-pkg-up":"^7.0.1","resolve":"^1.15.0","semver":"6.2.0","vscode-extension-telemetry":"^0.1.2","vscode-nls":"^4.1.1"},"contributes":{"configuration":{"type":"object","title":"Prettier","properties":{"prettier.disableLanguages":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of languages IDs to disable this extension on","scope":"window"},"prettier.requireConfig":{"type":"boolean","default":false,"markdownDescription":"Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).\n\n> _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._","scope":"resource"},"prettier.resolveGlobalModules":{"type":"boolean","default":false,"markdownDescription":"When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.\n> _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._","scope":"resource"},"prettier.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","markdownDescription":"The package manager you use to install node modules."},"prettier.useEditorConfig":{"type":"boolean","default":true,"markdownDescription":"Whether or not to take `.editorconfig` into account when parsing configuration. See the [prettier.resolveConfig](https://prettier.io/docs/en/api.html) docs for details.","scope":"resource"},"prettier.ignorePath":{"type":"string","default":".prettierignore","markdownDescription":"Path to a .prettierignore file","scope":"resource"},"prettier.prettierPath":{"type":"string","markdownDescription":"Path to the prettier module","scope":"resource"},"prettier.configPath":{"type":"string","markdownDescription":"Path to the prettier configuration file","scope":"resource"},"prettier.eslintIntegration":{"type":["boolean","null"],"markdownDescription":"Use `prettier-eslint` instead of `prettier`. Other settings will only be fallbacks in case they could not be inferred from eslint rules.","scope":"resource","default":null,"deprecationMessage":"This setting has been deprecated. See [documentation for more details](https://github.com/prettier/prettier-vscode#linter-integration)"},"prettier.tslintIntegration":{"type":["boolean","null"],"markdownDescription":"Use `prettier-tslint` instead of `prettier`. Other settings will only be fallbacks in case they could not be inferred from tslint rules.","scope":"resource","default":null,"deprecationMessage":"This setting has been deprecated. See [documentation for more details](https://github.com/prettier/prettier-vscode#linter-integration)"},"prettier.stylelintIntegration":{"type":["boolean","null"],"markdownDescription":"Use `prettier-stylelint` instead of`prettier`. Other settings will only be fallbacks in case they could not be inferred from stylelint rules.","default":null,"scope":"resource","deprecationMessage":"This setting has been deprecated. See [documentation for more details](https://github.com/prettier/prettier-vscode#linter-integration)"},"prettier.printWidth":{"type":"integer","default":80,"markdownDescription":"Fit code within this line limit","scope":"resource"},"prettier.tabWidth":{"type":"integer","default":2,"markdownDescription":"Number of spaces it should use per tab","scope":"resource"},"prettier.singleQuote":{"type":"boolean","default":false,"markdownDescription":"If true, will use single instead of double quotes","scope":"resource"},"prettier.trailingComma":{"type":"string","enum":["none","es5","all"],"default":"none","markdownDescription":"Controls the printing of trailing commas wherever possible. Valid options:\n- `none` - No trailing commas\n- `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)\n- `all` - Trailing commas wherever possible (function arguments)","scope":"resource"},"prettier.bracketSpacing":{"type":"boolean","default":true,"markdownDescription":"Controls the printing of spaces inside object literals","scope":"resource"},"prettier.jsxBracketSameLine":{"type":"boolean","default":false,"markdownDescription":"If true, puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line","scope":"resource"},"prettier.parser":{"type":["string","null"],"enum":["babylon","flow"],"default":null,"markdownDescription":"Override the parser. You shouldn't have to change this setting.","scope":"resource","deprecationMessage":"This setting is no longer supported. Use a prettier configuration file instead."},"prettier.semi":{"type":"boolean","default":true,"markdownDescription":"Whether to add a semicolon at the end of every line","scope":"resource"},"prettier.requirePragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.","scope":"resource"},"prettier.insertPragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can insert a special @format marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the @format marker.","scope":"resource"},"prettier.useTabs":{"type":"boolean","default":false,"markdownDescription":"Indent lines with tabs","scope":"resource"},"prettier.proseWrap":{"type":"string","enum":["preserve","always","never"],"default":"preserve","markdownDescription":"(Markdown) wrap prose over multiple lines","scope":"resource"},"prettier.arrowParens":{"type":"string","enum":["avoid","always"],"default":"avoid","markdownDescription":"Include parentheses around a sole arrow function parameter","scope":"resource"},"prettier.jsxSingleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single quotes instead of double quotes in JSX","scope":"resource"},"prettier.htmlWhitespaceSensitivity":{"type":"string","enum":["css","strict","ignore"],"default":"css","markdownDescription":"Specify the global whitespace sensitivity for HTML files.\n Valid options:\n- `css` - Respect the default value of CSS display property.\n- `strict` - Whitespaces are considered sensitive.\n- `ignores` - Whitespaces are considered insensitive.","scope":"resource"},"prettier.vueIndentScriptAndStyle":{"type":"boolean","default":false,"markdownDescription":"Whether or not to indent the code inside `<script>` and `<style>` tags in Vue files. Some people (like the creator of Vue) donâ€™t indent to save an indentation level, but this might break code folding in your editor.","scope":"resource"},"prettier.endOfLine":{"type":"string","enum":["auto","lf","crlf","cr"],"default":"auto","markdownDescription":"Specify the end of line used by prettier","scope":"resource"},"prettier.quoteProps":{"type":"string","enum":["as-needed","consistent","preserve"],"default":"as-needed","markdownDescription":"Change when properties in objects are quoted","scope":"resource"}}},"jsonValidation":[{"fileMatch":".prettierrc","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":".prettierrc.json","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"json","filenames":[".prettierrc"]},{"id":"ignore","filenames":[".prettierignore"]},{"id":"graphql","extensions":[".graphql"]},{"id":"vue","extensions":[".vue"]}],"commands":[{"command":"prettier.createConfigFile","title":"Prettier: Create Configuration File"}]},"uuid":"96fa4707-6983-4489-b7c5-d5ffdfdcce90","isBuiltin":false,"isUnderDevelopment":false,"id":"esbenp.prettier-vscode","identifier":{"value":"esbenp.prettier-vscode","_lower":"esbenp.prettier-vscode"},"extensionLocation":{"$mid":1,"fsPath":"/Users/saraagarwal/.vscode/extensions/esbenp.prettier-vscode-3.20.0","path":"/Users/saraagarwal/.vscode/extensions/esbenp.prettier-vscode-3.20.0","scheme":"file"}},{"name":"code-runner","displayName":"Code Runner","description":"Run C, C++, Java, JS, PHP, Python, Perl, Ruby, Go, Lua, Groovy, PowerShell, CMD, BASH, F#, C#, VBScript, TypeScript, CoffeeScript, Scala, Swift, Julia, Crystal, OCaml, R, AppleScript, Elixir, VB.NET, Clojure, Haxe, Obj-C, Rust, Racket, Scheme, AutoHotkey, AutoIt, Kotlin, Dart, Pascal, Haskell, Nim, D, Lisp, Kit, V, SCSS, Sass, CUDA","version":"0.9.17","publisher":"formulahendry","icon":"images/logo.png","engines":{"vscode":"^1.35.0"},"categories":["Programming Languages","Other"],"keywords":["javascript","php","python","perl","ruby","multi-root ready"],"bugs":{"url":"https://github.com/formulahendry/vscode-code-runner/issues","email":"formulahendry@gmail.com"},"homepage":"https://github.com/formulahendry/vscode-code-runner/blob/master/README.md","repository":{"type":"git","url":"https://github.com/formulahendry/vscode-code-runner.git"},"activationEvents":["onCommand:code-runner.run","onCommand:code-runner.runCustomCommand","onCommand:code-runner.runByLanguage"],"main":"./out/src/extension","contributes":{"commands":[{"command":"code-runner.run","title":"Run Code","icon":{"light":"./images/run-light.svg","dark":"./images/run-dark.svg"}},{"command":"code-runner.runCustomCommand","title":"Run Custom Command"},{"command":"code-runner.runByLanguage","title":"Run By Language"},{"command":"code-runner.stop","title":"Stop Code Run"}],"keybindings":[{"command":"code-runner.run","key":"ctrl+alt+n"},{"command":"code-runner.runCustomCommand","key":"ctrl+alt+k"},{"command":"code-runner.runByLanguage","key":"ctrl+alt+j"},{"command":"code-runner.stop","key":"ctrl+alt+m"}],"menus":{"editor/context":[{"when":"!inOutput && config.code-runner.showRunCommandInEditorContextMenu","command":"code-runner.run","group":"navigation"},{"when":"inOutput && !config.code-runner.runInTerminal","command":"code-runner.stop","group":"stop-code-run"}],"editor/title":[{"when":"config.code-runner.showRunIconInEditorTitleMenu","command":"code-runner.run","group":"navigation"}],"explorer/context":[{"when":"!explorerResourceIsFolder && config.code-runner.showRunCommandInExplorerContextMenu","command":"code-runner.run","group":"navigation"}]},"configuration":{"type":"object","title":"Run Code configuration","properties":{"code-runner.executorMapByGlob":{"type":"object","default":{"pom.xml":"cd $dir && mvn clean package"},"description":"Set the executor by glob.","scope":"resource"},"code-runner.executorMap":{"type":"object","default":{"javascript":"node","java":"cd $dir && javac $fileName && java $fileNameWithoutExt","c":"cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","cpp":"cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","objective-c":"cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","php":"php","python":"python -u","perl":"perl","perl6":"perl6","ruby":"ruby","go":"go run","lua":"lua","groovy":"groovy","powershell":"powershell -ExecutionPolicy ByPass -File","bat":"cmd /c","shellscript":"bash","fsharp":"fsi","csharp":"scriptcs","vbscript":"cscript //Nologo","typescript":"ts-node","coffeescript":"coffee","scala":"scala","swift":"swift","julia":"julia","crystal":"crystal","ocaml":"ocaml","r":"Rscript","applescript":"osascript","clojure":"lein exec","haxe":"haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt","rust":"cd $dir && rustc $fileName && $dir$fileNameWithoutExt","racket":"racket","scheme":"csi -script","ahk":"autohotkey","autoit":"autoit3","dart":"dart","pascal":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt","d":"cd $dir && dmd $fileName && $dir$fileNameWithoutExt","haskell":"runhaskell","nim":"nim compile --verbosity:0 --hints:off --run","lisp":"sbcl --script","kit":"kitc --run","v":"v run","sass":"sass --style expanded","scss":"scss --style expanded"},"description":"Set the executor of each language.","scope":"resource"},"code-runner.executorMapByFileExtension":{"type":"object","default":{".vb":"cd $dir && vbc /nologo $fileName && $dir$fileNameWithoutExt",".vbs":"cscript //Nologo",".scala":"scala",".jl":"julia",".cr":"crystal",".ml":"ocaml",".exs":"elixir",".hx":"haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",".rkt":"racket",".scm":"csi -script",".ahk":"autohotkey",".au3":"autoit3",".kt":"cd $dir && kotlinc $fileName -include-runtime -d $fileNameWithoutExt.jar && java -jar $fileNameWithoutExt.jar",".kts":"kotlinc -script",".dart":"dart",".pas":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt",".pp":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt",".d":"cd $dir && dmd $fileName && $dir$fileNameWithoutExt",".hs":"runhaskell",".nim":"nim compile --verbosity:0 --hints:off --run",".csproj":"dotnet run --project",".fsproj":"dotnet run --project",".lisp":"sbcl --script",".kit":"kitc --run",".v":"v run",".vsh":"v run",".sass":"sass --style expanded",".cu":"cd $dir && nvcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"},"description":"Set the executor of each file extension.","scope":"resource"},"code-runner.customCommand":{"type":"string","default":"echo Hello","description":"Set the custom command to run.","scope":"resource"},"code-runner.languageIdToFileExtensionMap":{"type":"object","default":{"bat":".bat","powershell":".ps1","typescript":".ts"},"description":"Set the mapping of languageId to file extension.","scope":"resource"},"code-runner.defaultLanguage":{"type":"string","default":"","description":"Set the default language to run.","scope":"resource"},"code-runner.cwd":{"type":"string","default":"","description":"Set the working directory.","scope":"resource"},"code-runner.fileDirectoryAsCwd":{"type":"boolean","default":false,"description":"Whether to use the directory of the file to be executed as the working directory.","scope":"resource"},"code-runner.clearPreviousOutput":{"type":"boolean","default":false,"description":"Whether to clear previous output before each run.","scope":"resource"},"code-runner.saveAllFilesBeforeRun":{"type":"boolean","default":false,"description":"Whether to save all files before running.","scope":"resource"},"code-runner.saveFileBeforeRun":{"type":"boolean","default":false,"description":"Whether to save the current file before running.","scope":"resource"},"code-runner.enableAppInsights":{"type":"boolean","default":true,"description":"Whether to enable AppInsights to track user telemetry data.","scope":"resource"},"code-runner.showExecutionMessage":{"type":"boolean","default":true,"description":"Whether to show extra execution message like [Running] ... and [Done] ...","scope":"resource"},"code-runner.runInTerminal":{"type":"boolean","default":false,"description":"Whether to run code in Integrated Terminal.","scope":"resource"},"code-runner.terminalRoot":{"type":"string","default":"","description":"For Windows system, replaces the Windows style drive letter in the command with a Unix style root when using a custom shell as the terminal, like Bash or Cgywin. Example: Setting this to '/mnt/' will replace 'C:\\path' with '/mnt/c/path'","scope":"resource"},"code-runner.preserveFocus":{"type":"boolean","default":true,"description":"Whether to preserve focus on code editor after code run is triggered.","scope":"resource"},"code-runner.ignoreSelection":{"type":"boolean","default":false,"description":"Whether to ignore selection to always run entire file.","scope":"resource"},"code-runner.showRunIconInEditorTitleMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' icon in editor title menu.","scope":"resource"},"code-runner.showRunCommandInEditorContextMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' command in editor context menu.","scope":"resource"},"code-runner.showRunCommandInExplorerContextMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' command in explorer context menu.","scope":"resource"},"code-runner.temporaryFileName":{"type":"string","default":"tempCodeRunnerFile","description":"Temporary file name used in running selected code snippet. When it is set as empty, the file name will be random.","scope":"resource"},"code-runner.respectShebang":{"type":"boolean","default":true,"description":"Whether to respect Shebang to run code.","scope":"resource"}}},"languages":[{"id":"code-runner-output","mimetypes":["text/x-code-output"]}],"grammars":[{"language":"code-runner-output","scopeName":"code-runner.output","path":"./syntaxes/code-runner-output.tmLanguage"}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","tslint":"tslint -t verbose src/**/*.ts"},"dependencies":{"applicationinsights":"^0.19.0","micromatch":"^4.0.2","tree-kill":"^1.1.0"},"devDependencies":{"@types/micromatch":"^3.1.0","@types/mocha":"^2.2.32","@types/node":"^6.0.40","mocha":"^6.1.4","tslint":"^5.5.0","typescript":"^2.0.3","vscode":"^1.1.34"},"uuid":"a6a0c5b2-d078-4bf5-a9ee-4e37054414b3","isBuiltin":false,"isUnderDevelopment":false,"id":"formulahendry.code-runner","identifier":{"value":"formulahendry.code-runner","_lower":"formulahendry.code-runner"},"extensionLocation":{"$mid":1,"fsPath":"/Users/saraagarwal/.vscode/extensions/formulahendry.code-runner-0.9.17","path":"/Users/saraagarwal/.vscode/extensions/formulahendry.code-runner-0.9.17","scheme":"file"}},{"private":true,"name":"reasonml","displayName":"OCaml and Reason IDE","description":"OCaml and Reason language support","version":"1.0.38","publisher":"freebroccolo","license":"Apache-2.0","bugs":{"url":"https://github.com/freebroccolo/vscode-reasonml/issues"},"repository":{"type":"git","url":"https://github.com/freebroccolo/vscode-reasonml.git"},"engines":{"vscode":"^1.21.0"},"categories":["Formatters","Programming Languages","Linters","Snippets"],"keywords":["ocaml","reason","bucklescript","reasonml","merlin"],"icon":"assets/logo.png","activationEvents":["onLanguage:ocaml","onLanguage:reason"],"main":"./out/src/extension","contributes":{"commands":[{"command":"reason.caseSplit","title":"Reason: Case Split"},{"command":"reason.showMerlinFiles","title":"Reason: Show Merlin Files"},{"command":"reason.showAvailableLibraries","title":"Reason: Show Libraries Available via Dependencies"},{"command":"reason.showProjectEnv","title":"Reason: Show Environment"}],"configuration":{"type":"object","title":"Reason configuration","properties":{"reason.codelens.unicode":{"type":"boolean","default":true,"description":"Enable the use of unicode symbols in codelens."},"reason.codelens.enabled":{"type":"boolean","default":false,"description":"Specifies whether the code lens is shown."},"reason.debounce.linter":{"oneOf":[{"type":"integer"},{"enum":["Infinity"]}],"default":500,"description":"How long to idle (in milliseconds) after keypresses before refreshing linter diagnostics. Smaller values refresh diagnostics more quickly."},"reason.diagnostics.tools":{"type":"array","items":{"enum":["merlin","bsb"]},"default":["merlin"],"maxItems":2,"uniqueItems":true,"description":"Specifies which tool or tools will be used to get diagnostics. If you choose both \"merlin\" and \"bsb\", merlin will be used while editing and bsb when saving."},"reason.format.width":{"type":["number",null],"default":null,"description":"Set the width of lines when formatting code with refmt"},"reason.path.bsb":{"type":"string","default":"./node_modules/bs-platform/lib/bsb.exe","description":"The path to the `bsb` binary."},"reason.path.ocamlfind":{"type":"string","default":"ocamlfind","description":"The path to the `ocamlfind` binary."},"reason.path.esy":{"type":"string","default":"esy","description":"The path to the `esy` binary."},"reason.path.env":{"type":"string","default":"env","description":"The path to the `env` command which prints the language server environment for debugging editor issues."},"reason.path.ocamlmerlin":{"type":"string","default":"ocamlmerlin","description":"The path to the `ocamlmerlin` binary."},"reason.path.ocpindent":{"type":"string","default":"ocp-indent","description":"The path to the `ocp-indent` binary."},"reason.path.opam":{"type":"string","default":"opam","description":"The path to the `opam` binary."},"reason.path.rebuild":{"type":"string","default":"rebuild","description":"The path to the `rebuild` binary."},"reason.path.refmt":{"type":"string","default":"refmt","description":"The path to the `refmt` binary."},"reason.path.refmterr":{"type":"string","default":"refmterr","description":"The path to the `refmterr` binary."},"reason.path.rtop":{"type":"string","default":"rtop","description":"The path to the `rtop` binary."},"reason.server.languages":{"type":"array","items":{"enum":["ocaml","reason"]},"default":["ocaml","reason"],"maxItems":2,"uniqueItems":true,"description":"The list of languages enable support for in the language server."}}},"grammars":[{"language":"ocaml","scopeName":"source.ocaml","path":"./syntaxes/ocaml.json"},{"language":"ocaml.hover.info","scopeName":"source.ocaml.hover.info","path":"./syntaxes/ocaml-hover-info.json"},{"language":"ocaml.hover.type","scopeName":"source.ocaml.hover.type","path":"./syntaxes/ocaml-hover-type.json"},{"language":"ocaml.merlin","scopeName":"source.ocaml.merlin","path":"./syntaxes/merlin.json"},{"language":"ocaml.ocamlbuild","scopeName":"source.ocaml.ocamlbuild","path":"./syntaxes/ocamlbuild.json"},{"language":"ocaml.opam","scopeName":"source.ocaml.opam","path":"./syntaxes/opam.json"},{"language":"reason","scopeName":"source.reason","path":"./syntaxes/reason.json"},{"language":"reason.hover.info","scopeName":"source.reason.hover.info","path":"./syntaxes/reason-hover-info.json"},{"language":"reason.hover.signature","scopeName":"source.reason.hover.signature","path":"./syntaxes/reason-hover-signature.json"},{"language":"reason.hover.type","scopeName":"source.reason.hover.type","path":"./syntaxes/reason-hover-type.json"},{"scopeName":"markdown.reason.codeblock","path":"./syntaxes/reason-markdown-codeblock.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.reason":"reason"}},{"scopeName":"markdown.ocaml.codeblock","path":"./syntaxes/ocaml-markdown-codeblock.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.ocaml":"ocaml"}}],"languages":[{"id":"ocaml","aliases":["OCaml"],"extensions":[".ml",".mli"],"configuration":"./ocaml.configuration.json"},{"id":"ocaml.hover.info"},{"id":"ocaml.hover.type"},{"id":"ocaml.merlin","aliases":["Merlin"],"extensions":["merlin"]},{"id":"ocaml.ocamlbuild","aliases":["OCamlbuild"],"extensions":["_tags"]},{"id":"ocaml.opam","aliases":["OPAM"],"extensions":["opam"]},{"id":"reason","aliases":["Reason"],"extensions":[".re",".rei"],"configuration":"./reason.configuration.json"},{"id":"reason.hover.info"},{"id":"reason.hover.signature"},{"id":"reason.hover.type"}],"menus":{"editor/context":[{"command":"reason.caseSplit","group":"reason","when":"editorTextFocus && resourceLangId == reason"}]},"snippets":[{"language":"reason","path":"./snippets/reason.json"}],"problemMatchers":[{"name":"ocamlc","fileLocation":["relative","${workspaceFolder}"],"pattern":[{"regexp":"^\\s*\\bFile\\b\\s*\"(.*)\",\\s*\\bline\\b\\s*(\\d+),\\s*\\bcharacters\\b\\s*(\\d+)-(\\d+)\\s*:\\s*$","file":1,"line":2,"column":3,"endColumn":4},{"regexp":"^(?:\\s*\\bParse\\b\\s*)?\\s*\\b([Ee]rror|Warning)\\b\\s*(?:\\(\\s*\\bwarning\\b\\s*(\\d+)\\))?\\s*:\\s*(.*)$","severity":1,"code":2,"message":3}]}]},"scripts":{"build":"tsc -p ./ && node script/syntax.js","format":"./node_modules/.bin/prettier --write \"src/**/*.ts\"","lint":"tslint --project tsconfig.json","postinstall":"node ./node_modules/vscode/bin/install","prebuild":"npm run format && npm run lint","vscode:prepublish":"node script/syntax.js"},"devDependencies":{"@types/lodash.flatmap":"^4.5.3","@types/node":"9.6.2","@types/pegjs":"0.10.0","prettier":"1.11.1","tslint":"5.9.1","typescript":"2.8.1","vscode":"1.1.14"},"dependencies":{"lodash.flatmap":"^4.5.0","ocaml-language-server":"1.0.35","pegjs":"0.10.0","vscode-jsonrpc":"3.6.0","vscode-languageclient":"4.0.1","vscode-languageserver":"4.0.0","vscode-languageserver-protocol":"3.6.0"},"uuid":"c7ccccce-e272-43df-883f-91f3de932890","isBuiltin":false,"isUnderDevelopment":false,"id":"freebroccolo.reasonml","identifier":{"value":"freebroccolo.reasonml","_lower":"freebroccolo.reasonml"},"extensionLocation":{"$mid":1,"fsPath":"/Users/saraagarwal/.vscode/extensions/freebroccolo.reasonml-1.0.38","path":"/Users/saraagarwal/.vscode/extensions/freebroccolo.reasonml-1.0.38","scheme":"file"}},{"private":true,"name":"ocaml","displayName":"OCaml","description":"Rich OCaml language support for Visual Studio Code","version":"0.6.43","publisher":"hackwaly","icon":"images/colour-icon.png","engines":{"vscode":"^1.6.0"},"repository":{"type":"git","url":"https://github.com/hackwaly/vscode-ocaml"},"categories":["Languages","Linters","Debuggers"],"activationEvents":["onCommand:ocaml.switch_mli_ml","onCommand:ocaml.repl","onCommand:ocaml.repl_send","onCommand:ocaml.repl_send_all","onCommand:ocaml.repl_send_stmt","onCommand:ocaml.restart_merlin","onCommand:ocaml.opam_switch","onLanguage:ocaml","onLanguage:ocamllex","onLanguage:menhir"],"main":"./out/src/extension","contributes":{"languages":[{"id":"ocaml","aliases":["OCaml"],"extensions":[".ml",".mli"],"filenames":[".ocamlinit"],"configuration":"./ocaml.configuration.json"},{"id":"ocamllex","aliases":["OCamllex"],"extensions":[".mll"],"configuration":"./ocamllex.configuration.json"},{"id":"menhir","aliases":["Menhir","OCamlyacc"],"extensions":[".mly"],"configuration":"./menhir.configuration.json"}],"problemMatchers":[{"name":"ocamlc","owner":"ocaml","fileLocation":"relative","pattern":[{"regexp":"^File \"(.*)\", line (\\d+)(?:, characters (\\d+)-(\\d+))?:$","file":1,"line":2,"column":3,"endColumn":4},{"regexp":"^(?:(?:Parse\\s+)?(Warning|[Ee]rror)(?:\\s+\\d+)?:)?\\s+(.*)$","severity":1,"message":2,"loop":true}]}],"commands":[{"category":"OCaml","command":"ocaml.switch_mli_ml","title":"Switch Signature/Implementation"},{"category":"OCaml","command":"ocaml.repl","title":"New REPL Session"},{"category":"OCaml","command":"ocaml.repl_send","title":"Send Selection to REPL Session"},{"category":"OCaml","command":"ocaml.repl_send_all","title":"Send File to REPL Session"},{"category":"OCaml","command":"ocaml.repl_send_stmt","title":"Send Selection as Statement to REPL Session"},{"category":"OCaml","command":"ocaml.restart_merlin","title":"Restart Merlin Session"},{"category":"OCaml","command":"ocaml.opam_switch","title":"Opam Switch"}],"grammars":[{"language":"ocaml","scopeName":"source.ocaml","path":"./syntaxes/OCaml.tmLanguage"},{"language":"ocamllex","scopeName":"source.ocamllex","path":"./syntaxes/OCamllex.tmLanguage"},{"language":"menhir","scopeName":"source.menhir","path":"./syntaxes/Menhir.tmLanguage"}],"snippets":[{"language":"menhir","path":"./snippets/menhir.json"}],"debuggers":[{"type":"ocamldebug","label":"OCaml","program":"./out/src/debug/debug.js","runtime":"node","enableBreakpointsFor":{"languageIds":["ocaml","ocamllex","menhir"]},"initialConfigurations":[{"name":"OCaml","type":"ocamldebug","request":"launch","program":"${workspaceRoot}/main.d.byte","console":"internalConsole","stopOnEntry":false}],"configurationAttributes":{"launch":{"required":["program"],"properties":{"cd":{"type":"string","description":"The working directory for ocamldebug."},"includePath":{"type":"array","items":{"type":"string"},"description":"The list of include directories for ocamldebug."},"console":{"enum":["internalConsole","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"internalConsole"},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceRoot}/.env"},"noDebug":{"type":"boolean","default":false},"program":{"type":"string","description":"The path of program to debug."},"arguments":{"type":"array","items":{"type":"string"},"description":"The command-line arguments for the program."},"stopOnEntry":{"type":"boolean","description":"Automatically stop after launch.","default":false},"socket":{"type":"string","description":"The socket name or address for remote debug."},"symbols":{"type":"string","description":"The path to OCaml debug symbols *.cds file."},"script":{"type":"string","description":"The path to the debug script which you wish to run after debug session established."},"encoding":{"type":"string","description":"The encoding which program's stdout/stderr used.","default":"utf-8"},"ocamldebugEncoding":{"type":"string","description":"The encoding which ocamldebug's stdout/stderr used.","default":"utf-8"},"_showLogs":{"type":"boolean","description":"Show logs which debugAdapter produced in debug window. Useful for debug debugAdapter.","default":false}}}}}],"configuration":{"type":"object","title":"OCaml configuration","properties":{"ocaml.opamPath":{"type":"string","default":"opam","description":"Path to opam."},"ocaml.useOpamToResolve":{"type":"boolean","default":false,"description":"Use opam to resolve executable paths this extension needs."},"ocaml.ocamldebugPath":{"type":"string","default":"ocamldebug","description":"Path to ocamldebug."},"ocaml.ocpIndentPath":{"type":"string","default":"ocp-indent","description":"Path to ocp-indent."},"ocaml.merlinPath":{"type":"string","default":"ocamlmerlin","description":"Path to ocamlmerlin."},"ocaml.lintOnChange":{"type":"boolean","default":true,"description":"Do lint when made changes."},"ocaml.lintOnSave":{"type":"boolean","default":false,"description":"Do lint when save document."},"ocaml.lintDelay":{"type":"number","default":500,"description":"Time to delay lint when made changes."},"ocaml.replPath.windows":{"type":"string","default":"ocaml.exe","description":"Path to OCaml REPL (eg. ocaml.exe, utop.exe ...) on Windows OS."},"ocaml.replPath.unix":{"type":"string","default":"ocaml","description":"Path to OCaml REPL (eg. ocaml, utop ...) on Unix-like OS."},"ocaml.replFocus":{"type":"boolean","default":false,"description":"Focus REPL terminal after send selection."},"ocaml.replNewline":{"type":"boolean","default":true,"description":"Append newline when send selection to REPL."}}},"configurationDefaults":{"[ocaml]":{"editor.tabSize":2,"editor.insertSpaces":true},"[ocamllex]":{"editor.tabSize":2,"editor.insertSpaces":true},"[menhir]":{"editor.tabSize":2,"editor.insertSpaces":true}}},"scripts":{"vscode:prepublish":"node ./node_modules/vscode/bin/compile","compile":"node ./node_modules/vscode/bin/compile -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"typescript":"^1.8.5","vscode":"^0.11.0"},"dependencies":{"compare-versions":"^3.0.1","freeport":"^1.0.5","get-stream":"^2.2.1","iconv-lite":"^0.4.13","tiny-promisify":"^0.1.1","vscode-debugadapter":"^1.20.0","vscode-debugprotocol":"^1.20.0"},"uuid":"585e998c-f7ad-46a3-8d1b-1e0f02cbb232","isBuiltin":false,"isUnderDevelopment":false,"id":"hackwaly.ocaml","identifier":{"value":"hackwaly.ocaml","_lower":"hackwaly.ocaml"},"extensionLocation":{"$mid":1,"fsPath":"/Users/saraagarwal/.vscode/extensions/hackwaly.ocaml-0.6.43","path":"/Users/saraagarwal/.vscode/extensions/hackwaly.ocaml-0.6.43","scheme":"file"}},{"private":true,"name":"ocaml-debugger","displayName":"OCaml Debugger","description":"OCaml debugger.","version":"0.1.3","publisher":"hackwaly","icon":"images/colour-icon.png","engines":{"vscode":"^1.17.0"},"repository":{"type":"git","url":"https://github.com/hackwaly/vscode-ocaml-debugger"},"categories":["Debuggers"],"main":"extension.js","activationEvents":["onDebugResolve:ocaml"],"contributes":{"breakpoints":[{"language":"ocaml"},{"language":"ocamllex"},{"language":"menhir"}],"debuggers":[{"type":"ocaml-debugger","label":"OCaml","runtime":"node","program":"debug-adapter.js","configurationSnippets":[{"label":"OCaml: Launch program","description":"Debug the program","body":{"name":"${2:Launch file}","type":"ocaml-debugger","request":"launch","program":"^\"${1:\\${file}}\""}}],"configurationAttributes":{"launch":{"required":["program"],"properties":{"noDebug":{"type":"boolean","default":false},"cwd":{"type":"string","description":"The working directory for debuggee program."},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the debuggee program.","default":{}},"program":{"type":"string","description":"The path of debuggee program."},"symbols":{"type":"string","description":"The path to optional OCaml debug symbols .cds file."},"arguments":{"type":"array","items":{"type":"string"},"description":"The command-line arguments for the debuggee program."},"console":{"enum":["internalConsole","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"internalConsole"},"stopOnEntry":{"type":"boolean","description":"Automatically stop after launch.","default":false},"dotMerlins":{"type":"array","items":{"type":"string"},"description":"List of *.merlin files."}}}}}]},"uuid":"b68fc317-8371-498a-9da9-dee4d9be750e","isBuiltin":false,"isUnderDevelopment":false,"id":"hackwaly.ocaml-debugger","identifier":{"value":"hackwaly.ocaml-debugger","_lower":"hackwaly.ocaml-debugger"},"extensionLocation":{"$mid":1,"fsPath":"/Users/saraagarwal/.vscode/extensions/hackwaly.ocaml-debugger-0.1.3","path":"/Users/saraagarwal/.vscode/extensions/hackwaly.ocaml-debugger-0.1.3","scheme":"file"}}]}